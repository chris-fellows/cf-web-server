using CFWebServer.Interfaces;
using CFWebServer.Models;

namespace CFWebServer
{
    /// <summary>
    /// MIME type database from static list
    /// </summary>
    public class StaticMimeTypeInfoDatabase : IMimeTypeDatabase
    {
        public List<MimeTypeInfo> GetAll()
        {
            var mimeTypes = new List<MimeTypeInfo>();

            mimeTypes.Add(new MimeTypeInfo("application/andrew-inset", new string[] { ".ez" }));
            mimeTypes.Add(new MimeTypeInfo("application/applixware", new string[] { ".aw" }));
            mimeTypes.Add(new MimeTypeInfo("application/atom+xml", new string[] { ".atom" }));
            mimeTypes.Add(new MimeTypeInfo("application/atomcat+xml", new string[] { ".atomcat" }));
            mimeTypes.Add(new MimeTypeInfo("application/atomsvc+xml", new string[] { ".atomsvc" }));
            mimeTypes.Add(new MimeTypeInfo("application/ccxml+xml", new string[] { ".ccxml" }));
            mimeTypes.Add(new MimeTypeInfo("application/cu-seeme", new string[] { ".cu" }));
            mimeTypes.Add(new MimeTypeInfo("application/davmount+xml", new string[] { ".davmount" }));
            mimeTypes.Add(new MimeTypeInfo("application/ecmascript", new string[] { ".ecma" }));
            mimeTypes.Add(new MimeTypeInfo("application/emma+xml", new string[] { ".emma" }));
            mimeTypes.Add(new MimeTypeInfo("application/epub+zip", new string[] { ".epub" }));
            mimeTypes.Add(new MimeTypeInfo("application/font-tdpfr", new string[] { ".pfr" }));
            mimeTypes.Add(new MimeTypeInfo("application/gzip", new string[] { ".gz", ".tgz" }));
            mimeTypes.Add(new MimeTypeInfo("application/hyperstudio", new string[] { ".stk" }));
            mimeTypes.Add(new MimeTypeInfo("application/java-archive", new string[] { ".jar" }));
            mimeTypes.Add(new MimeTypeInfo("application/java-serialized-object", new string[] { ".ser" }));
            mimeTypes.Add(new MimeTypeInfo("application/java-vm", new string[] { ".class" }));
            mimeTypes.Add(new MimeTypeInfo("application/json", new string[] { ".json" }));
            mimeTypes.Add(new MimeTypeInfo("application/lost+xml", new string[] { ".lostxml" }));
            mimeTypes.Add(new MimeTypeInfo("application/mac-binhex40", new string[] { ".hqx" }));
            mimeTypes.Add(new MimeTypeInfo("application/mac-compactpro", new string[] { ".cpt" }));
            mimeTypes.Add(new MimeTypeInfo("application/marc", new string[] { ".mrc" }));
            mimeTypes.Add(new MimeTypeInfo("application/mathematica", new string[] { ".ma", ".mb", ".nb" }));
            mimeTypes.Add(new MimeTypeInfo("application/mathml+xml", new string[] { ".mathml", ".mml" }));
            mimeTypes.Add(new MimeTypeInfo("application/mbox", new string[] { ".mbox" }));
            mimeTypes.Add(new MimeTypeInfo("application/mediaservercontrol+xml", new string[] { ".mscml" }));
            mimeTypes.Add(new MimeTypeInfo("application/mp4", new string[] { ".mp4s" }));
            mimeTypes.Add(new MimeTypeInfo("application/msword", new string[] { ".doc", ".dot", ".wiz" }));
            mimeTypes.Add(new MimeTypeInfo("application/mxf", new string[] { ".mxf" }));
            mimeTypes.Add(new MimeTypeInfo("application/octet-stream", new string[] { ".a", ".bin", ".bpk", ".deploy", ".dist", ".distz", ".dmg", ".dms", ".dump", ".elc", ".lha", ".lrf", ".lzh", ".o", ".obj", ".pkg", ".so" }));
            mimeTypes.Add(new MimeTypeInfo("application/oda", new string[] { ".oda" }));
            mimeTypes.Add(new MimeTypeInfo("application/oebps-package+xml", new string[] { ".opf" }));
            mimeTypes.Add(new MimeTypeInfo("application/ogg", new string[] { ".ogx" }));
            mimeTypes.Add(new MimeTypeInfo("application/onenote", new string[] { ".onepkg", ".onetmp", ".onetoc", ".onetoc2" }));
            mimeTypes.Add(new MimeTypeInfo("application/patch-ops-error+xml", new string[] { ".xer" }));
            mimeTypes.Add(new MimeTypeInfo("application/pdf", new string[] { ".pdf" }));
            mimeTypes.Add(new MimeTypeInfo("application/pgp-encrypted", new string[] { ".pgp" }));
            mimeTypes.Add(new MimeTypeInfo("application/pgp-signature", new string[] { ".asc", ".sig" }));
            mimeTypes.Add(new MimeTypeInfo("application/pics-rules", new string[] { ".prf" }));
            mimeTypes.Add(new MimeTypeInfo("application/pkcs10", new string[] { ".p10" }));
            mimeTypes.Add(new MimeTypeInfo("application/pkcs7-mime", new string[] { ".p7c", ".p7m" }));
            mimeTypes.Add(new MimeTypeInfo("application/pkcs7-signature", new string[] { ".p7s" }));
            mimeTypes.Add(new MimeTypeInfo("application/pkix-cert", new string[] { ".cer" }));
            mimeTypes.Add(new MimeTypeInfo("application/pkix-crl", new string[] { ".crl" }));
            mimeTypes.Add(new MimeTypeInfo("application/pkix-pkipath", new string[] { ".pkipath" }));
            mimeTypes.Add(new MimeTypeInfo("application/pkixcmp", new string[] { ".pki" }));
            mimeTypes.Add(new MimeTypeInfo("application/pls+xml", new string[] { ".pls" }));
            mimeTypes.Add(new MimeTypeInfo("application/postscript", new string[] { ".ai", ".eps", ".ps" }));
            mimeTypes.Add(new MimeTypeInfo("application/prql", new string[] { ".prql" }));
            mimeTypes.Add(new MimeTypeInfo("application/prs.cww", new string[] { ".cww" }));
            mimeTypes.Add(new MimeTypeInfo("application/rdf+xml", new string[] { ".rdf" }));
            mimeTypes.Add(new MimeTypeInfo("application/reginfo+xml", new string[] { ".rif" }));
            mimeTypes.Add(new MimeTypeInfo("application/relax-ng-compact-syntax", new string[] { ".rnc" }));
            mimeTypes.Add(new MimeTypeInfo("application/resource-lists+xml", new string[] { ".rl" }));
            mimeTypes.Add(new MimeTypeInfo("application/resource-lists-diff+xml", new string[] { ".rld" }));
            mimeTypes.Add(new MimeTypeInfo("application/rls-services+xml", new string[] { ".rs" }));
            mimeTypes.Add(new MimeTypeInfo("application/rsd+xml", new string[] { ".rsd" }));
            mimeTypes.Add(new MimeTypeInfo("application/rss+xml", new string[] { ".rss", ".xml" }));
            mimeTypes.Add(new MimeTypeInfo("application/rtf", new string[] { ".rtf" }));
            mimeTypes.Add(new MimeTypeInfo("application/sbml+xml", new string[] { ".sbml" }));
            mimeTypes.Add(new MimeTypeInfo("application/scvp-cv-request", new string[] { ".scq" }));
            mimeTypes.Add(new MimeTypeInfo("application/scvp-cv-response", new string[] { ".scs" }));
            mimeTypes.Add(new MimeTypeInfo("application/scvp-vp-request", new string[] { ".spq" }));
            mimeTypes.Add(new MimeTypeInfo("application/scvp-vp-response", new string[] { ".spp" }));
            mimeTypes.Add(new MimeTypeInfo("application/sdp", new string[] { ".sdp" }));
            mimeTypes.Add(new MimeTypeInfo("application/set-payment-initiation", new string[] { ".setpay" }));
            mimeTypes.Add(new MimeTypeInfo("application/set-registration-initiation", new string[] { ".setreg" }));
            mimeTypes.Add(new MimeTypeInfo("application/shf+xml", new string[] { ".shf" }));
            mimeTypes.Add(new MimeTypeInfo("application/smil+xml", new string[] { ".smi", ".smil" }));
            mimeTypes.Add(new MimeTypeInfo("application/sparql-query", new string[] { ".rq" }));
            mimeTypes.Add(new MimeTypeInfo("application/sparql-results+xml", new string[] { ".srx" }));
            mimeTypes.Add(new MimeTypeInfo("application/srgs", new string[] { ".gram" }));
            mimeTypes.Add(new MimeTypeInfo("application/srgs+xml", new string[] { ".grxml" }));
            mimeTypes.Add(new MimeTypeInfo("application/ssml+xml", new string[] { ".ssml" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.3gpp.pic-bw-large", new string[] { ".plb" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.3gpp.pic-bw-small", new string[] { ".psb" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.3gpp.pic-bw-var", new string[] { ".pvb" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.3gpp2.tcap", new string[] { ".tcap" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.3m.post-it-notes", new string[] { ".pwn" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.accpac.simply.aso", new string[] { ".aso" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.accpac.simply.imp", new string[] { ".imp" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.acucobol", new string[] { ".acu" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.acucorp", new string[] { ".acutc", ".atc" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.adobe.air-application-installer-package+zip", new string[] { ".air" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.adobe.xdp+xml", new string[] { ".xdp" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.adobe.xfdf", new string[] { ".xfdf" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.airzip.filesecure.azf", new string[] { ".azf" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.airzip.filesecure.azs", new string[] { ".azs" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.amazon.ebook", new string[] { ".azw" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.americandynamics.acc", new string[] { ".acc" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.amiga.ami", new string[] { ".ami" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.android.package-archive", new string[] { ".apk" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.anser-web-certificate-issue-initiation", new string[] { ".cii" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.anser-web-funds-transfer-initiation", new string[] { ".fti" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.antix.game-component", new string[] { ".atx" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.apple.installer+xml", new string[] { ".mpkg" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.arastra.swi", new string[] { ".swi" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.audiograph", new string[] { ".aep" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.blueice.multipass", new string[] { ".mpm" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.bmi", new string[] { ".bmi" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.businessobjects", new string[] { ".rep" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.chemdraw+xml", new string[] { ".cdxml" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.chipnuts.karaoke-mmd", new string[] { ".mmd" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.cinderella", new string[] { ".cdy" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.claymore", new string[] { ".cla" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.clonk.c4group", new string[] { ".c4d", ".c4f", ".c4g", ".c4p", ".c4u" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.commonspace", new string[] { ".csp" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.contact.cmsg", new string[] { ".cdbcmsg" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.cosmocaller", new string[] { ".cmc" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.crick.clicker", new string[] { ".clkx" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.crick.clicker.keyboard", new string[] { ".clkk" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.crick.clicker.palette", new string[] { ".clkp" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.crick.clicker.template", new string[] { ".clkt" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.crick.clicker.wordbank", new string[] { ".clkw" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.criticaltools.wbs+xml", new string[] { ".wbs" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.ctc-posml", new string[] { ".pml" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.cups-ppd", new string[] { ".ppd" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.curl.car", new string[] { ".car" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.curl.pcurl", new string[] { ".pcurl" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.data-vision.rdz", new string[] { ".rdz" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.debian.binary-package", new string[] { ".deb", ".udeb" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.denovo.fcselayout-link", new string[] { ".fe_launch" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.dna", new string[] { ".dna" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.dolby.mlp", new string[] { ".mlp" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.dpgraph", new string[] { ".dpg" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.dreamfactory", new string[] { ".dfac" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.dynageo", new string[] { ".geo" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.ecowin.chart", new string[] { ".mag" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.enliven", new string[] { ".nml" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.epson.esf", new string[] { ".esf" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.epson.msf", new string[] { ".msf" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.epson.quickanime", new string[] { ".qam" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.epson.salt", new string[] { ".slt" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.epson.ssf", new string[] { ".ssf" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.eszigno3+xml", new string[] { ".es3", ".et3" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.ezpix-album", new string[] { ".ez2" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.ezpix-package", new string[] { ".ez3" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.fdf", new string[] { ".fdf" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.fdsn.mseed", new string[] { ".mseed" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.fdsn.seed", new string[] { ".dataless", ".seed" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.flographit", new string[] { ".gph" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.fluxtime.clip", new string[] { ".ftc" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.framemaker", new string[] { ".book", ".fm", ".frame", ".maker" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.frogans.fnc", new string[] { ".fnc" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.frogans.ltf", new string[] { ".ltf" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.fsc.weblaunch", new string[] { ".fsc" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.fujitsu.oasys", new string[] { ".oas" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.fujitsu.oasys2", new string[] { ".oa2" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.fujitsu.oasys3", new string[] { ".oa3" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.fujitsu.oasysgp", new string[] { ".fg5" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.fujitsu.oasysprs", new string[] { ".bh2" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.fujixerox.ddd", new string[] { ".ddd" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.fujixerox.docuworks", new string[] { ".xdw" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.fujixerox.docuworks.binder", new string[] { ".xbd" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.fuzzysheet", new string[] { ".fzs" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.genomatix.tuxedo", new string[] { ".txd" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.geogebra.file", new string[] { ".ggb" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.geogebra.tool", new string[] { ".ggt" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.geometry-explorer", new string[] { ".gex", ".gre" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.gerber", new string[] { ".gbr" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.gmx", new string[] { ".gmx" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.google-earth.kml+xml", new string[] { ".kml" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.google-earth.kmz", new string[] { ".kmz" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.grafeq", new string[] { ".gqf", ".gqs" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.groove-account", new string[] { ".gac" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.groove-help", new string[] { ".ghf" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.groove-identity-message", new string[] { ".gim" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.groove-injector", new string[] { ".grv" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.groove-tool-message", new string[] { ".gtm" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.groove-tool-template", new string[] { ".tpl" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.groove-vcard", new string[] { ".vcg" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.handheld-entertainment+xml", new string[] { ".zmm" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.hbci", new string[] { ".hbci" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.hhe.lesson-player", new string[] { ".les" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.hp-hpgl", new string[] { ".hpgl" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.hp-hpid", new string[] { ".hpid" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.hp-hps", new string[] { ".hps" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.hp-jlyt", new string[] { ".jlt" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.hp-pcl", new string[] { ".pcl" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.hp-pclxl", new string[] { ".pclxl" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.hydrostatix.sof-data", new string[] { ".sfd-hdstx" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.hzn-3d-crossword", new string[] { ".x3d" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.ibm.minipay", new string[] { ".mpy" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.ibm.modcap", new string[] { ".afp", ".list3820", ".listafp" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.ibm.rights-management", new string[] { ".irm" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.ibm.secure-container", new string[] { ".sc" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.iccprofile", new string[] { ".icc", ".icm" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.igloader", new string[] { ".igl" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.immervision-ivp", new string[] { ".ivp" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.immervision-ivu", new string[] { ".ivu" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.intercon.formnet", new string[] { ".xpw", ".xpx" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.intu.qbo", new string[] { ".qbo" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.intu.qfx", new string[] { ".qfx" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.ipunplugged.rcprofile", new string[] { ".rcprofile" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.irepository.package+xml", new string[] { ".irp" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.is-xpr", new string[] { ".xpr" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.jam", new string[] { ".jam" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.jcp.javame.midlet-rms", new string[] { ".rms" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.jisp", new string[] { ".jisp" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.joost.joda-archive", new string[] { ".joda" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.kahootz", new string[] { ".ktr", ".ktz" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.kde.karbon", new string[] { ".karbon" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.kde.kchart", new string[] { ".chrt" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.kde.kformula", new string[] { ".kfo" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.kde.kivio", new string[] { ".flw" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.kde.kontour", new string[] { ".kon" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.kde.kpresenter", new string[] { ".kpr", ".kpt" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.kde.kspread", new string[] { ".ksp" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.kde.kword", new string[] { ".kwd", ".kwt" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.kenameaapp", new string[] { ".htke" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.kidspiration", new string[] { ".kia" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.kinar", new string[] { ".kne", ".knp" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.koan", new string[] { ".skd", ".skm", ".skp", ".skt" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.kodak-descriptor", new string[] { ".sse" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.llamagraphics.life-balance.desktop", new string[] { ".lbd" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.llamagraphics.life-balance.exchange+xml", new string[] { ".lbe" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.lotus-1-2-3", new string[] { "0.123" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.lotus-approach", new string[] { ".apr" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.lotus-freelance", new string[] { ".pre" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.lotus-notes", new string[] { ".nsf" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.lotus-organizer", new string[] { ".org" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.lotus-screencam", new string[] { ".scm" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.lotus-wordpro", new string[] { ".lwp" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.macports.portpkg", new string[] { ".portpkg" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.mcd", new string[] { ".mcd" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.medcalcdata", new string[] { ".mc1" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.mediastation.cdkey", new string[] { ".cdkey" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.mfer", new string[] { ".mwf" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.mfmp", new string[] { ".mfm" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.micrografx.flo", new string[] { ".flo" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.micrografx.igx", new string[] { ".igx" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.mif", new string[] { ".mif" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.mobius.daf", new string[] { ".daf" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.mobius.dis", new string[] { ".dis" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.mobius.mbk", new string[] { ".mbk" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.mobius.mqy", new string[] { ".mqy" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.mobius.msl", new string[] { ".msl" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.mobius.plc", new string[] { ".plc" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.mobius.txf", new string[] { ".txf" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.mophun.application", new string[] { ".mpn" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.mophun.certificate", new string[] { ".mpc" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.mozilla.xul+xml", new string[] { ".xul" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.ms-artgalry", new string[] { ".cil" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.ms-cab-compressed", new string[] { ".cab" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.ms-excel", new string[] { ".xla", ".xlb", ".xlc", ".xlm", ".xls", ".xlt", ".xlw" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.ms-excel.addin.macroenabled.12", new string[] { ".xlam" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.ms-excel.sheet.binary.macroenabled.12", new string[] { ".xlsb" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.ms-excel.sheet.macroenabled.12", new string[] { ".xlsm" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.ms-excel.template.macroenabled.12", new string[] { ".xltm" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.ms-fontobject", new string[] { ".eot" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.ms-htmlhelp", new string[] { ".chm" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.ms-ims", new string[] { ".ims" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.ms-lrm", new string[] { ".lrm" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.ms-pki.seccat", new string[] { ".cat" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.ms-pki.stl", new string[] { ".stl" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.ms-powerpoint", new string[] { ".pot", ".ppa", ".pps", ".ppt", ".pwz" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.ms-powerpoint.addin.macroenabled.12", new string[] { ".ppam" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.ms-powerpoint.presentation.macroenabled.12", new string[] { ".pptm" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.ms-powerpoint.slide.macroenabled.12", new string[] { ".sldm" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.ms-powerpoint.slideshow.macroenabled.12", new string[] { ".ppsm" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.ms-powerpoint.template.macroenabled.12", new string[] { ".potm" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.ms-project", new string[] { ".mpp", ".mpt" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.ms-word.document.macroenabled.12", new string[] { ".docm" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.ms-word.template.macroenabled.12", new string[] { ".dotm" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.ms-works", new string[] { ".wcm", ".wdb", ".wks", ".wps" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.ms-wpl", new string[] { ".wpl" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.ms-xpsdocument", new string[] { ".xps" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.mseq", new string[] { ".mseq" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.musician", new string[] { ".mus" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.muvee.style", new string[] { ".msty" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.neurolanguage.nlu", new string[] { ".nlu" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.noblenet-directory", new string[] { ".nnd" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.noblenet-sealer", new string[] { ".nns" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.noblenet-web", new string[] { ".nnw" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.nokia.n-gage.data", new string[] { ".ngdat" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.nokia.n-gage.symbian.install", new string[] { ".n-gage" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.nokia.radio-preset", new string[] { ".rpst" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.nokia.radio-presets", new string[] { ".rpss" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.novadigm.edm", new string[] { ".edm" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.novadigm.edx", new string[] { ".edx" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.novadigm.ext", new string[] { ".ext" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.oasis.opendocument.chart", new string[] { ".odc" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.oasis.opendocument.chart-template", new string[] { ".otc" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.oasis.opendocument.database", new string[] { ".odb" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.oasis.opendocument.formula", new string[] { ".odf" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.oasis.opendocument.formula-template", new string[] { ".odft" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.oasis.opendocument.graphics", new string[] { ".odg" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.oasis.opendocument.graphics-template", new string[] { ".otg" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.oasis.opendocument.image", new string[] { ".odi" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.oasis.opendocument.image-template", new string[] { ".oti" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.oasis.opendocument.presentation", new string[] { ".odp" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.oasis.opendocument.presentation-template", new string[] { ".otp" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.oasis.opendocument.spreadsheet", new string[] { ".ods" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.oasis.opendocument.spreadsheet-template", new string[] { ".ots" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.oasis.opendocument.text", new string[] { ".odt" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.oasis.opendocument.text-master", new string[] { ".otm" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.oasis.opendocument.text-template", new string[] { ".ott" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.oasis.opendocument.text-web", new string[] { ".oth" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.olpc-sugar", new string[] { ".xo" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.oma.dd2+xml", new string[] { ".dd2" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.openofficeorg.extension", new string[] { ".oxt" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.openxmlformats-officedocument.presentationml.presentation", new string[] { ".pptx" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.openxmlformats-officedocument.presentationml.slide", new string[] { ".sldx" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.openxmlformats-officedocument.presentationml.slideshow", new string[] { ".ppsx" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.openxmlformats-officedocument.presentationml.template", new string[] { ".potx" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", new string[] { ".xlsx" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.openxmlformats-officedocument.spreadsheetml.template", new string[] { ".xltx" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.openxmlformats-officedocument.wordprocessingml.document", new string[] { ".docx" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.openxmlformats-officedocument.wordprocessingml.template", new string[] { ".dotx" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.osgi.dp", new string[] { ".dp" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.palm", new string[] { ".oprc", ".pdb", ".pqa" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.pg.format", new string[] { ".str" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.pg.osasli", new string[] { ".ei6" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.picsel", new string[] { ".efif" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.pocketlearn", new string[] { ".plf" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.powerbuilder6", new string[] { ".pbd" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.previewsystems.box", new string[] { ".box" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.proteus.magazine", new string[] { ".mgz" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.publishare-delta-tree", new string[] { ".qps" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.pvi.ptid1", new string[] { ".ptid" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.quark.quarkxpress", new string[] { ".qwd", ".qwt", ".qxb", ".qxd", ".qxl", ".qxt" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.rar", new string[] { ".rar" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.recordare.musicxml", new string[] { ".mxl" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.recordare.musicxml+xml", new string[] { ".musicxml" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.rim.cod", new string[] { ".cod" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.rn-realmedia", new string[] { ".rm" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.route66.link66+xml", new string[] { ".link66" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.seemail", new string[] { ".see" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.sema", new string[] { ".sema" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.semd", new string[] { ".semd" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.semf", new string[] { ".semf" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.shana.informed.formdata", new string[] { ".ifm" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.shana.informed.formtemplate", new string[] { ".itp" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.shana.informed.interchange", new string[] { ".iif" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.shana.informed.package", new string[] { ".ipk" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.simtech-mindmapper", new string[] { ".twd", ".twds" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.smaf", new string[] { ".mmf" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.smart.teacher", new string[] { ".teacher" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.solent.sdkm+xml", new string[] { ".sdkd", ".sdkm" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.spotfire.dxp", new string[] { ".dxp" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.spotfire.sfs", new string[] { ".sfs" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.sqlite3", new string[] { ".db", ".sqlite", ".sqlite3", ".db-wal", ".sqlite-wal", ".db-shm", ".sqlite-shm" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.stardivision.calc", new string[] { ".sdc" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.stardivision.draw", new string[] { ".sda" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.stardivision.impress", new string[] { ".sdd" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.stardivision.math", new string[] { ".smf" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.stardivision.writer", new string[] { ".sdw", ".vor" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.stardivision.writer-global", new string[] { ".sgl" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.sun.xml.calc", new string[] { ".sxc" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.sun.xml.calc.template", new string[] { ".stc" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.sun.xml.draw", new string[] { ".sxd" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.sun.xml.draw.template", new string[] { ".std" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.sun.xml.impress", new string[] { ".sxi" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.sun.xml.impress.template", new string[] { ".sti" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.sun.xml.math", new string[] { ".sxm" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.sun.xml.writer", new string[] { ".sxw" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.sun.xml.writer.global", new string[] { ".sxg" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.sun.xml.writer.template", new string[] { ".stw" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.sus-calendar", new string[] { ".sus", ".susp" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.svd", new string[] { ".svd" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.symbian.install", new string[] { ".sis", ".sisx" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.syncml+xml", new string[] { ".xsm" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.syncml.dm+wbxml", new string[] { ".bdm" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.syncml.dm+xml", new string[] { ".xdm" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.tao.intent-module-archive", new string[] { ".tao" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.tmobile-livetv", new string[] { ".tmo" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.trid.tpt", new string[] { ".tpt" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.triscape.mxs", new string[] { ".mxs" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.trueapp", new string[] { ".tra" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.ufdl", new string[] { ".ufd", ".ufdl" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.uiq.theme", new string[] { ".utz" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.umajin", new string[] { ".umj" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.unity", new string[] { ".unityweb" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.uoml+xml", new string[] { ".uoml" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.vcx", new string[] { ".vcx" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.visio", new string[] { ".vsd", ".vss", ".vst", ".vsw", ".vsdx", ".vssx", ".vstx", ".vssm", ".vstm" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.visionary", new string[] { ".vis" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.vsf", new string[] { ".vsf" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.wap.sic", new string[] { ".sic" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.wap.slc", new string[] { ".slc" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.wap.wbxml", new string[] { ".wbxml" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.wap.wmlc", new string[] { ".wmlc" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.wap.wmlscriptc", new string[] { ".wmlsc" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.webturbo", new string[] { ".wtb" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.wordperfect", new string[] { ".wpd" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.wqd", new string[] { ".wqd" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.wt.stf", new string[] { ".stf" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.xara", new string[] { ".xar" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.xfdl", new string[] { ".xfdl" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.yamaha.hv-dic", new string[] { ".hvd" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.yamaha.hv-script", new string[] { ".hvs" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.yamaha.hv-voice", new string[] { ".hvp" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.yamaha.openscoreformat", new string[] { ".osf" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.yamaha.openscoreformat.osfpvg+xml", new string[] { ".osfpvg" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.yamaha.smaf-audio", new string[] { ".saf" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.yamaha.smaf-phrase", new string[] { ".spf" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.yellowriver-custom-menu", new string[] { ".cmp" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.zul", new string[] { ".zir", ".zirz" }));
            mimeTypes.Add(new MimeTypeInfo("application/vnd.zzazz.deck+xml", new string[] { ".zaz" }));
            mimeTypes.Add(new MimeTypeInfo("application/voicexml+xml", new string[] { ".vxml" }));
            mimeTypes.Add(new MimeTypeInfo("application/wasm", new string[] { ".wasm" }));
            mimeTypes.Add(new MimeTypeInfo("application/winhlp", new string[] { ".hlp" }));
            mimeTypes.Add(new MimeTypeInfo("application/wsdl+xml", new string[] { ".wsdl" }));
            mimeTypes.Add(new MimeTypeInfo("application/wspolicy+xml", new string[] { ".wspolicy" }));
            mimeTypes.Add(new MimeTypeInfo("application/x-7z-compressed", new string[] { ".7z" }));
            mimeTypes.Add(new MimeTypeInfo("application/x-abiword", new string[] { ".abw", ".zabw", ".abw.gz" }));
            mimeTypes.Add(new MimeTypeInfo("application/x-ace-compressed", new string[] { ".ace" }));
            mimeTypes.Add(new MimeTypeInfo("application/x-authorware-bin", new string[] { ".aab", ".u32", ".vox", ".x32" }));
            mimeTypes.Add(new MimeTypeInfo("application/x-authorware-map", new string[] { ".aam" }));
            mimeTypes.Add(new MimeTypeInfo("application/x-authorware-seg", new string[] { ".aas" }));
            mimeTypes.Add(new MimeTypeInfo("application/x-bcpio", new string[] { ".bcpio" }));
            mimeTypes.Add(new MimeTypeInfo("application/x-bittorrent", new string[] { ".torrent" }));
            mimeTypes.Add(new MimeTypeInfo("application/x-bzip", new string[] { ".bz" }));
            mimeTypes.Add(new MimeTypeInfo("application/x-bzip2", new string[] { ".boz", ".bz2" }));
            mimeTypes.Add(new MimeTypeInfo("application/x-cdlink", new string[] { ".vcd" }));
            mimeTypes.Add(new MimeTypeInfo("application/x-chat", new string[] { ".chat" }));
            mimeTypes.Add(new MimeTypeInfo("application/x-chess-pgn", new string[] { ".pgn" }));
            mimeTypes.Add(new MimeTypeInfo("application/x-cpio", new string[] { ".cpio" }));
            mimeTypes.Add(new MimeTypeInfo("application/x-csh", new string[] { ".csh" }));
            mimeTypes.Add(new MimeTypeInfo("application/x-debian-package", new string[] { ".deb", ".udeb" }));
            mimeTypes.Add(new MimeTypeInfo("application/x-director", new string[] { ".cct", ".cst", ".cxt", ".dcr", ".dir", ".dxr", ".fgd", ".swa", ".w3d" }));
            mimeTypes.Add(new MimeTypeInfo("application/x-doom", new string[] { ".wad" }));
            mimeTypes.Add(new MimeTypeInfo("application/x-dtbncx+xml", new string[] { ".ncx" }));
            mimeTypes.Add(new MimeTypeInfo("application/x-dtbook+xml", new string[] { ".dtb" }));
            mimeTypes.Add(new MimeTypeInfo("application/x-dtbresource+xml", new string[] { ".res" }));
            mimeTypes.Add(new MimeTypeInfo("application/x-dvi", new string[] { ".dvi" }));
            mimeTypes.Add(new MimeTypeInfo("application/x-font-bdf", new string[] { ".bdf" }));
            mimeTypes.Add(new MimeTypeInfo("application/x-font-ghostscript", new string[] { ".gsf" }));
            mimeTypes.Add(new MimeTypeInfo("application/x-font-linux-psf", new string[] { ".psf" }));
            mimeTypes.Add(new MimeTypeInfo("application/x-font-otf", new string[] { ".otf" }));
            mimeTypes.Add(new MimeTypeInfo("application/x-font-pcf", new string[] { ".pcf" }));
            mimeTypes.Add(new MimeTypeInfo("application/x-font-snf", new string[] { ".snf" }));
            mimeTypes.Add(new MimeTypeInfo("application/x-font-ttf", new string[] { ".ttc", ".ttf" }));
            mimeTypes.Add(new MimeTypeInfo("application/x-font-type1", new string[] { ".afm", ".pfa", ".pfb", ".pfm" }));
            mimeTypes.Add(new MimeTypeInfo("application/x-futuresplash", new string[] { ".spl" }));
            mimeTypes.Add(new MimeTypeInfo("application/x-gnumeric", new string[] { ".gnumeric" }));
            mimeTypes.Add(new MimeTypeInfo("application/x-gtar", new string[] { ".gtar" }));
            mimeTypes.Add(new MimeTypeInfo("application/x-gzip", new string[] { ".gz", ".tgz" }));
            mimeTypes.Add(new MimeTypeInfo("application/x-hdf", new string[] { ".hdf" }));
            mimeTypes.Add(new MimeTypeInfo("application/x-iso9660-image", new string[] { ".iso", ".isoimg", ".cdr" }));
            mimeTypes.Add(new MimeTypeInfo("application/x-java-jnlp-file", new string[] { ".jnlp" }));
            mimeTypes.Add(new MimeTypeInfo("application/x-killustrator", new string[] { ".kil" }));
            mimeTypes.Add(new MimeTypeInfo("application/x-krita", new string[] { ".kra", ".krz" }));
            mimeTypes.Add(new MimeTypeInfo("application/x-latex", new string[] { ".latex" }));
            mimeTypes.Add(new MimeTypeInfo("application/x-mobipocket-ebook", new string[] { ".mobi", ".prc" }));
            mimeTypes.Add(new MimeTypeInfo("application/x-ms-application", new string[] { ".application" }));
            mimeTypes.Add(new MimeTypeInfo("application/x-ms-wmd", new string[] { ".wmd" }));
            mimeTypes.Add(new MimeTypeInfo("application/x-ms-wmz", new string[] { ".wmz" }));
            mimeTypes.Add(new MimeTypeInfo("application/x-ms-xbap", new string[] { ".xbap" }));
            mimeTypes.Add(new MimeTypeInfo("application/x-msaccess", new string[] { ".mdb" }));
            mimeTypes.Add(new MimeTypeInfo("application/x-msbinder", new string[] { ".obd" }));
            mimeTypes.Add(new MimeTypeInfo("application/x-mscardfile", new string[] { ".crd" }));
            mimeTypes.Add(new MimeTypeInfo("application/x-msclip", new string[] { ".clp" }));
            mimeTypes.Add(new MimeTypeInfo("application/x-msdownload", new string[] { ".bat", ".com", ".dll", ".exe", ".msi" }));
            mimeTypes.Add(new MimeTypeInfo("application/x-msmediaview", new string[] { ".m13", ".m14", ".mvb" }));
            mimeTypes.Add(new MimeTypeInfo("application/x-msmetafile", new string[] { ".wmf" }));
            mimeTypes.Add(new MimeTypeInfo("application/x-msmoney", new string[] { ".mny" }));
            mimeTypes.Add(new MimeTypeInfo("application/x-mspublisher", new string[] { ".pub" }));
            mimeTypes.Add(new MimeTypeInfo("application/x-msschedule", new string[] { ".scd" }));
            mimeTypes.Add(new MimeTypeInfo("application/x-msterminal", new string[] { ".trm" }));
            mimeTypes.Add(new MimeTypeInfo("application/x-mswrite", new string[] { ".wri" }));
            mimeTypes.Add(new MimeTypeInfo("application/x-netcdf", new string[] { ".cdf", ".nc" }));
            mimeTypes.Add(new MimeTypeInfo("application/x-perl", new string[] { ".pm", ".pl" }));
            mimeTypes.Add(new MimeTypeInfo("application/x-pkcs12", new string[] { ".p12", ".pfx" }));
            mimeTypes.Add(new MimeTypeInfo("application/x-pkcs7-certificates", new string[] { ".p7b", ".spc" }));
            mimeTypes.Add(new MimeTypeInfo("application/x-pkcs7-certreqresp", new string[] { ".p7r" }));
            mimeTypes.Add(new MimeTypeInfo("application/x-rar-compressed", new string[] { ".rar" }));
            mimeTypes.Add(new MimeTypeInfo("application/x-redhat-package-manager", new string[] { ".rpa" }));
            mimeTypes.Add(new MimeTypeInfo("application/x-rpm", new string[] { ".rpm" }));
            mimeTypes.Add(new MimeTypeInfo("application/x-sh", new string[] { ".sh" }));
            mimeTypes.Add(new MimeTypeInfo("application/x-shar", new string[] { ".shar" }));
            mimeTypes.Add(new MimeTypeInfo("application/x-shellscript", new string[] { ".sh" }));
            mimeTypes.Add(new MimeTypeInfo("application/x-shockwave-flash", new string[] { ".swf" }));
            mimeTypes.Add(new MimeTypeInfo("application/x-silverlight-app", new string[] { ".xap" }));
            mimeTypes.Add(new MimeTypeInfo("application/x-stuffit", new string[] { ".sit" }));
            mimeTypes.Add(new MimeTypeInfo("application/x-stuffitx", new string[] { ".sitx" }));
            mimeTypes.Add(new MimeTypeInfo("application/x-sv4cpio", new string[] { ".sv4cpio" }));
            mimeTypes.Add(new MimeTypeInfo("application/x-sv4crc", new string[] { ".sv4crc" }));
            mimeTypes.Add(new MimeTypeInfo("application/x-tar", new string[] { ".tar" }));
            mimeTypes.Add(new MimeTypeInfo("application/x-tcl", new string[] { ".tcl" }));
            mimeTypes.Add(new MimeTypeInfo("application/x-tex", new string[] { ".tex" }));
            mimeTypes.Add(new MimeTypeInfo("application/x-tex-tfm", new string[] { ".tfm" }));
            mimeTypes.Add(new MimeTypeInfo("application/x-texinfo", new string[] { ".texi", ".texinfo" }));
            mimeTypes.Add(new MimeTypeInfo("application/x-trash", new string[] { "" }));
            mimeTypes.Add(new MimeTypeInfo("application/x-ustar", new string[] { ".ustar" }));
            mimeTypes.Add(new MimeTypeInfo("application/x-wais-source", new string[] { ".src" }));
            mimeTypes.Add(new MimeTypeInfo("application/x-x509-ca-cert", new string[] { ".crt", ".der" }));
            mimeTypes.Add(new MimeTypeInfo("application/x-xfig", new string[] { ".fig" }));
            mimeTypes.Add(new MimeTypeInfo("application/x-xpinstall", new string[] { ".xpi" }));
            mimeTypes.Add(new MimeTypeInfo("application/x-zip-compressed", new string[] { ".zip" }));
            mimeTypes.Add(new MimeTypeInfo("application/xenc+xml", new string[] { ".xenc" }));
            mimeTypes.Add(new MimeTypeInfo("application/xhtml+xml", new string[] { ".xht", ".xhtml" }));
            mimeTypes.Add(new MimeTypeInfo("application/xml", new string[] { ".xml", ".xpdl", ".xsl" }));
            mimeTypes.Add(new MimeTypeInfo("application/xml-dtd", new string[] { ".dtd" }));
            mimeTypes.Add(new MimeTypeInfo("application/xop+xml", new string[] { ".xop" }));
            mimeTypes.Add(new MimeTypeInfo("application/xslt+xml", new string[] { ".xslt" }));
            mimeTypes.Add(new MimeTypeInfo("application/xspf+xml", new string[] { ".xspf" }));
            mimeTypes.Add(new MimeTypeInfo("application/xv+xml", new string[] { ".mxml", ".xhvml", ".xvm", ".xvml" }));
            mimeTypes.Add(new MimeTypeInfo("application/yaml", new string[] { ".yaml", ".yml" }));
            mimeTypes.Add(new MimeTypeInfo("application/zip", new string[] { ".zip" }));
            mimeTypes.Add(new MimeTypeInfo("application/zip-compressed", new string[] { ".zip" }));
            mimeTypes.Add(new MimeTypeInfo("audio/3gpp2", new string[] { ".3g2" }));
            mimeTypes.Add(new MimeTypeInfo("audio/aac", new string[] { ".aac", ".m4a" }));
            mimeTypes.Add(new MimeTypeInfo("audio/aacp", new string[] { ".aacp" }));
            mimeTypes.Add(new MimeTypeInfo("audio/adpcm", new string[] { ".adp" }));
            mimeTypes.Add(new MimeTypeInfo("audio/aiff", new string[] { ".aiff", ".aif", ".aff" }));
            mimeTypes.Add(new MimeTypeInfo("audio/basic", new string[] { ".au", ".snd" }));
            mimeTypes.Add(new MimeTypeInfo("audio/flac", new string[] { ".flac" }));
            mimeTypes.Add(new MimeTypeInfo("audio/midi", new string[] { ".kar", ".mid", ".midi", ".rmi" }));
            mimeTypes.Add(new MimeTypeInfo("audio/mp4", new string[] { ".mp4", ".m4a", ".m4b", ".m4p", ".m4r", ".m4v", ".mp4v", ".3gp", ".3g2", ".3ga", ".3gpa", ".3gpp", ".3gpp2", ".3gp2" }));
            mimeTypes.Add(new MimeTypeInfo("audio/mp4a-latm", new string[] { "" }));
            mimeTypes.Add(new MimeTypeInfo("audio/mpeg", new string[] { ".m2a", ".m3a", ".mp2", ".mp2a", ".mp3", ".mpga" }));
            mimeTypes.Add(new MimeTypeInfo("audio/ogg", new string[] { ".oga", ".ogg", ".spx" }));
            mimeTypes.Add(new MimeTypeInfo("audio/opus", new string[] { ".opus" }));
            mimeTypes.Add(new MimeTypeInfo("audio/vnd.digital-winds", new string[] { ".eol" }));
            mimeTypes.Add(new MimeTypeInfo("audio/vnd.dts", new string[] { ".dts" }));
            mimeTypes.Add(new MimeTypeInfo("audio/vnd.dts.hd", new string[] { ".dtshd" }));
            mimeTypes.Add(new MimeTypeInfo("audio/vnd.lucent.voice", new string[] { ".lvp" }));
            mimeTypes.Add(new MimeTypeInfo("audio/vnd.ms-playready.media.pya", new string[] { ".pya" }));
            mimeTypes.Add(new MimeTypeInfo("audio/vnd.nuera.ecelp4800", new string[] { ".ecelp4800" }));
            mimeTypes.Add(new MimeTypeInfo("audio/vnd.nuera.ecelp7470", new string[] { ".ecelp7470" }));
            mimeTypes.Add(new MimeTypeInfo("audio/vnd.nuera.ecelp9600", new string[] { ".ecelp9600" }));
            mimeTypes.Add(new MimeTypeInfo("audio/vnd.wav", new string[] { ".wav" }));
            mimeTypes.Add(new MimeTypeInfo("audio/webm", new string[] { ".weba" }));
            mimeTypes.Add(new MimeTypeInfo("audio/x-matroska", new string[] { ".mka" }));
            mimeTypes.Add(new MimeTypeInfo("audio/x-mpegurl", new string[] { ".m3u" }));
            mimeTypes.Add(new MimeTypeInfo("audio/x-ms-wax", new string[] { ".wax" }));
            mimeTypes.Add(new MimeTypeInfo("audio/x-ms-wma", new string[] { ".wma" }));
            mimeTypes.Add(new MimeTypeInfo("audio/x-pn-realaudio", new string[] { ".ra", ".ram" }));
            mimeTypes.Add(new MimeTypeInfo("audio/x-pn-realaudio-plugin", new string[] { ".rmp" }));
            mimeTypes.Add(new MimeTypeInfo("chemical/x-cdx", new string[] { ".cdx" }));
            mimeTypes.Add(new MimeTypeInfo("chemical/x-cif", new string[] { ".cif" }));
            mimeTypes.Add(new MimeTypeInfo("chemical/x-cmdf", new string[] { ".cmdf" }));
            mimeTypes.Add(new MimeTypeInfo("chemical/x-cml", new string[] { ".cml" }));
            mimeTypes.Add(new MimeTypeInfo("chemical/x-csml", new string[] { ".csml" }));
            mimeTypes.Add(new MimeTypeInfo("chemical/x-xyz", new string[] { ".xyz" }));
            mimeTypes.Add(new MimeTypeInfo("font/otf", new string[] { ".otf" }));
            mimeTypes.Add(new MimeTypeInfo("font/woff", new string[] { ".woff" }));
            mimeTypes.Add(new MimeTypeInfo("font/woff2", new string[] { ".woff2" }));
            mimeTypes.Add(new MimeTypeInfo("gcode", new string[] { ".gcode" }));
            mimeTypes.Add(new MimeTypeInfo("image/avif", new string[] { ".avif" }));
            mimeTypes.Add(new MimeTypeInfo("image/avif-sequence", new string[] { ".avifs" }));
            mimeTypes.Add(new MimeTypeInfo("image/bmp", new string[] { ".bmp" }));
            mimeTypes.Add(new MimeTypeInfo("image/cgm", new string[] { ".cgm" }));
            mimeTypes.Add(new MimeTypeInfo("image/g3fax", new string[] { ".g3" }));
            mimeTypes.Add(new MimeTypeInfo("image/gif", new string[] { ".gif" }));
            mimeTypes.Add(new MimeTypeInfo("image/heic", new string[] { ".heif", ".heic" }));
            mimeTypes.Add(new MimeTypeInfo("image/ief", new string[] { ".ief" }));
            mimeTypes.Add(new MimeTypeInfo("image/jpeg", new string[] { ".jpe", ".jpeg", ".jpg", ".pjpg", ".jfif", ".jfif-tbnl", ".jif" }));
            mimeTypes.Add(new MimeTypeInfo("image/pjpeg", new string[] { ".jpe", ".jpeg", ".jpg", ".pjpg", ".jfi", ".jfif", ".jfif-tbnl", ".jif" }));
            mimeTypes.Add(new MimeTypeInfo("image/png", new string[] { ".png" }));
            mimeTypes.Add(new MimeTypeInfo("image/prs.btif", new string[] { ".btif" }));
            mimeTypes.Add(new MimeTypeInfo("image/svg+xml", new string[] { ".svg", ".svgz" }));
            mimeTypes.Add(new MimeTypeInfo("image/tiff", new string[] { ".tif", ".tiff" }));
            mimeTypes.Add(new MimeTypeInfo("image/vnd.adobe.photoshop", new string[] { ".psd" }));
            mimeTypes.Add(new MimeTypeInfo("image/vnd.djvu", new string[] { ".djv", ".djvu" }));
            mimeTypes.Add(new MimeTypeInfo("image/vnd.dwg", new string[] { ".dwg" }));
            mimeTypes.Add(new MimeTypeInfo("image/vnd.dxf", new string[] { ".dxf" }));
            mimeTypes.Add(new MimeTypeInfo("image/vnd.fastbidsheet", new string[] { ".fbs" }));
            mimeTypes.Add(new MimeTypeInfo("image/vnd.fpx", new string[] { ".fpx" }));
            mimeTypes.Add(new MimeTypeInfo("image/vnd.fst", new string[] { ".fst" }));
            mimeTypes.Add(new MimeTypeInfo("image/vnd.fujixerox.edmics-mmr", new string[] { ".mmr" }));
            mimeTypes.Add(new MimeTypeInfo("image/vnd.fujixerox.edmics-rlc", new string[] { ".rlc" }));
            mimeTypes.Add(new MimeTypeInfo("image/vnd.ms-modi", new string[] { ".mdi" }));
            mimeTypes.Add(new MimeTypeInfo("image/vnd.net-fpx", new string[] { ".npx" }));
            mimeTypes.Add(new MimeTypeInfo("image/vnd.wap.wbmp", new string[] { ".wbmp" }));
            mimeTypes.Add(new MimeTypeInfo("image/vnd.xiff", new string[] { ".xif" }));
            mimeTypes.Add(new MimeTypeInfo("image/webp", new string[] { ".webp" }));
            mimeTypes.Add(new MimeTypeInfo("image/x-adobe-dng", new string[] { ".dng" }));
            mimeTypes.Add(new MimeTypeInfo("image/x-canon-cr2", new string[] { ".cr2" }));
            mimeTypes.Add(new MimeTypeInfo("image/x-canon-crw", new string[] { ".crw" }));
            mimeTypes.Add(new MimeTypeInfo("image/x-cmu-raster", new string[] { ".ras" }));
            mimeTypes.Add(new MimeTypeInfo("image/x-cmx", new string[] { ".cmx" }));
            mimeTypes.Add(new MimeTypeInfo("image/x-epson-erf", new string[] { ".erf" }));
            mimeTypes.Add(new MimeTypeInfo("image/x-freehand", new string[] { ".fh", ".fh4", ".fh5", ".fh7", ".fhc" }));
            mimeTypes.Add(new MimeTypeInfo("image/x-fuji-raf", new string[] { ".raf" }));
            mimeTypes.Add(new MimeTypeInfo("image/x-icns", new string[] { ".icns" }));
            mimeTypes.Add(new MimeTypeInfo("image/x-icon", new string[] { ".ico" }));
            mimeTypes.Add(new MimeTypeInfo("image/x-kodak-dcr", new string[] { ".dcr" }));
            mimeTypes.Add(new MimeTypeInfo("image/x-kodak-k25", new string[] { ".k25" }));
            mimeTypes.Add(new MimeTypeInfo("image/x-kodak-kdc", new string[] { ".kdc" }));
            mimeTypes.Add(new MimeTypeInfo("image/x-minolta-mrw", new string[] { ".mrw" }));
            mimeTypes.Add(new MimeTypeInfo("image/x-nikon-nef", new string[] { ".nef" }));
            mimeTypes.Add(new MimeTypeInfo("image/x-olympus-orf", new string[] { ".orf" }));
            mimeTypes.Add(new MimeTypeInfo("image/x-panasonic-raw", new string[] { ".raw", ".rw2", ".rwl" }));
            mimeTypes.Add(new MimeTypeInfo("image/x-pcx", new string[] { ".pcx" }));
            mimeTypes.Add(new MimeTypeInfo("image/x-pentax-pef", new string[] { ".pef", ".ptx" }));
            mimeTypes.Add(new MimeTypeInfo("image/x-pict", new string[] { ".pct", ".pic" }));
            mimeTypes.Add(new MimeTypeInfo("image/x-portable-anymap", new string[] { ".pnm" }));
            mimeTypes.Add(new MimeTypeInfo("image/x-portable-bitmap", new string[] { ".pbm" }));
            mimeTypes.Add(new MimeTypeInfo("image/x-portable-graymap", new string[] { ".pgm" }));
            mimeTypes.Add(new MimeTypeInfo("image/x-portable-pixmap", new string[] { ".ppm" }));
            mimeTypes.Add(new MimeTypeInfo("image/x-rgb", new string[] { ".rgb" }));
            mimeTypes.Add(new MimeTypeInfo("image/x-sigma-x3f", new string[] { ".x3f" }));
            mimeTypes.Add(new MimeTypeInfo("image/x-sony-arw", new string[] { ".arw" }));
            mimeTypes.Add(new MimeTypeInfo("image/x-sony-sr2", new string[] { ".sr2" }));
            mimeTypes.Add(new MimeTypeInfo("image/x-sony-srf", new string[] { ".srf" }));
            mimeTypes.Add(new MimeTypeInfo("image/x-xbitmap", new string[] { ".xbm" }));
            mimeTypes.Add(new MimeTypeInfo("image/x-xpixmap", new string[] { ".xpm" }));
            mimeTypes.Add(new MimeTypeInfo("image/x-xwindowdump", new string[] { ".xwd" }));
            mimeTypes.Add(new MimeTypeInfo("message/rfc822", new string[] { ".eml", ".mht", ".mhtml", ".mime", ".nws" }));
            mimeTypes.Add(new MimeTypeInfo("model/iges", new string[] { ".iges", ".igs" }));
            mimeTypes.Add(new MimeTypeInfo("model/mesh", new string[] { ".mesh", ".msh", ".silo" }));
            mimeTypes.Add(new MimeTypeInfo("model/vnd.dwf", new string[] { ".dwf" }));
            mimeTypes.Add(new MimeTypeInfo("model/vnd.gdl", new string[] { ".gdl" }));
            mimeTypes.Add(new MimeTypeInfo("model/vnd.gtw", new string[] { ".gtw" }));
            mimeTypes.Add(new MimeTypeInfo("model/vnd.mts", new string[] { ".mts" }));
            mimeTypes.Add(new MimeTypeInfo("model/vnd.vtu", new string[] { ".vtu" }));
            mimeTypes.Add(new MimeTypeInfo("model/vrml", new string[] { ".vrml", ".wrl" }));
            mimeTypes.Add(new MimeTypeInfo("test/mimetype", new string[] { ".test" }));
            mimeTypes.Add(new MimeTypeInfo("text/calendar", new string[] { ".ics", ".ifb" }));
            mimeTypes.Add(new MimeTypeInfo("text/css", new string[] { ".css" }));
            mimeTypes.Add(new MimeTypeInfo("text/csv", new string[] { ".csv" }));
            mimeTypes.Add(new MimeTypeInfo("text/html", new string[] { ".htm", ".html" }));
            mimeTypes.Add(new MimeTypeInfo("text/javascript", new string[] { ".js" }));
            mimeTypes.Add(new MimeTypeInfo("text/markdown", new string[] { ".md", ".markdown", ".mdown", ".markdn" }));
            mimeTypes.Add(new MimeTypeInfo("text/mathml", new string[] { ".mathml", ".mml" }));
            mimeTypes.Add(new MimeTypeInfo("text/plain", new string[] { ".conf", ".def", ".diff", ".in", ".ksh", ".list", ".log", ".pl", ".text", ".txt" }));
            mimeTypes.Add(new MimeTypeInfo("text/prs.lines.tag", new string[] { ".dsc" }));
            mimeTypes.Add(new MimeTypeInfo("text/richtext", new string[] { ".rtx" }));
            mimeTypes.Add(new MimeTypeInfo("text/sgml", new string[] { ".sgm", ".sgml" }));
            mimeTypes.Add(new MimeTypeInfo("text/tab-separated-values", new string[] { ".tsv" }));
            mimeTypes.Add(new MimeTypeInfo("text/troff", new string[] { ".man", ".me", ".ms", ".roff", ".t", ".tr" }));
            mimeTypes.Add(new MimeTypeInfo("text/uri-list", new string[] { ".uri", ".uris", ".urls" }));
            mimeTypes.Add(new MimeTypeInfo("text/vnd.curl", new string[] { ".curl" }));
            mimeTypes.Add(new MimeTypeInfo("text/vnd.curl.dcurl", new string[] { ".dcurl" }));
            mimeTypes.Add(new MimeTypeInfo("text/vnd.curl.mcurl", new string[] { ".mcurl" }));
            mimeTypes.Add(new MimeTypeInfo("text/vnd.curl.scurl", new string[] { ".scurl" }));
            mimeTypes.Add(new MimeTypeInfo("text/vnd.fly", new string[] { ".fly" }));
            mimeTypes.Add(new MimeTypeInfo("text/vnd.fmi.flexstor", new string[] { ".flx" }));
            mimeTypes.Add(new MimeTypeInfo("text/vnd.graphviz", new string[] { ".gv" }));
            mimeTypes.Add(new MimeTypeInfo("text/vnd.in3d.3dml", new string[] { ".3dml" }));
            mimeTypes.Add(new MimeTypeInfo("text/vnd.in3d.spot", new string[] { ".spot" }));
            mimeTypes.Add(new MimeTypeInfo("text/vnd.sun.j2me.app-descriptor", new string[] { ".jad" }));
            mimeTypes.Add(new MimeTypeInfo("text/vnd.wap.si", new string[] { ".si" }));
            mimeTypes.Add(new MimeTypeInfo("text/vnd.wap.sl", new string[] { ".sl" }));
            mimeTypes.Add(new MimeTypeInfo("text/vnd.wap.wml", new string[] { ".wml" }));
            mimeTypes.Add(new MimeTypeInfo("text/vnd.wap.wmlscript", new string[] { ".wmls" }));
            mimeTypes.Add(new MimeTypeInfo("text/x-asm", new string[] { ".asm", ".s" }));
            mimeTypes.Add(new MimeTypeInfo("text/x-c", new string[] { ".c", ".cc", ".cpp", ".cxx", ".dic", ".h", ".hh" }));
            mimeTypes.Add(new MimeTypeInfo("text/x-fortran", new string[] { ".f", ".f77", ".f90", ".for" }));
            mimeTypes.Add(new MimeTypeInfo("text/x-java-source", new string[] { ".java" }));
            mimeTypes.Add(new MimeTypeInfo("text/x-pascal", new string[] { ".p", ".pas", ".pp", ".inc" }));
            mimeTypes.Add(new MimeTypeInfo("text/x-python", new string[] { ".py", ".pyc", ".pyo", ".pyd", ".whl" }));
            mimeTypes.Add(new MimeTypeInfo("text/x-setext", new string[] { ".etx" }));
            mimeTypes.Add(new MimeTypeInfo("text/x-uuencode", new string[] { ".uu" }));
            mimeTypes.Add(new MimeTypeInfo("text/x-vcalendar", new string[] { ".vcs" }));
            mimeTypes.Add(new MimeTypeInfo("text/x-vcard", new string[] { ".vcf" }));
            mimeTypes.Add(new MimeTypeInfo("video/3gpp", new string[] { ".3gp" }));
            mimeTypes.Add(new MimeTypeInfo("video/3gpp2", new string[] { ".3g2" }));
            mimeTypes.Add(new MimeTypeInfo("video/h261", new string[] { ".h261" }));
            mimeTypes.Add(new MimeTypeInfo("video/h263", new string[] { ".h263" }));
            mimeTypes.Add(new MimeTypeInfo("video/h264", new string[] { ".h264" }));
            mimeTypes.Add(new MimeTypeInfo("video/jpeg", new string[] { ".jpgv" }));
            mimeTypes.Add(new MimeTypeInfo("video/jpm", new string[] { ".jpgm", ".jpm" }));
            mimeTypes.Add(new MimeTypeInfo("video/mj2", new string[] { ".mj2", ".mjp2" }));
            mimeTypes.Add(new MimeTypeInfo("video/mp2t", new string[] { ".ts" }));
            mimeTypes.Add(new MimeTypeInfo("video/mp4", new string[] { ".mp4", ".mp4v", ".mpg4" }));
            mimeTypes.Add(new MimeTypeInfo("video/mpeg", new string[] { ".m1v", ".m2v", ".mpa", ".mpe", ".mpeg", ".mpg" }));
            mimeTypes.Add(new MimeTypeInfo("video/ogg", new string[] { ".ogv" }));
            mimeTypes.Add(new MimeTypeInfo("video/quicktime", new string[] { ".mov", ".qt" }));
            mimeTypes.Add(new MimeTypeInfo("video/vnd.fvt", new string[] { ".fvt" }));
            mimeTypes.Add(new MimeTypeInfo("video/vnd.mpegurl", new string[] { ".m4u", ".mxu" }));
            mimeTypes.Add(new MimeTypeInfo("video/vnd.ms-playready.media.pyv", new string[] { ".pyv" }));
            mimeTypes.Add(new MimeTypeInfo("video/vnd.vivo", new string[] { ".viv" }));
            mimeTypes.Add(new MimeTypeInfo("video/webm", new string[] { ".webm" }));
            mimeTypes.Add(new MimeTypeInfo("video/x-f4v", new string[] { ".f4v" }));
            mimeTypes.Add(new MimeTypeInfo("video/x-fli", new string[] { ".fli" }));
            mimeTypes.Add(new MimeTypeInfo("video/x-flv", new string[] { ".flv" }));
            mimeTypes.Add(new MimeTypeInfo("video/x-m4v", new string[] { ".m4v" }));
            mimeTypes.Add(new MimeTypeInfo("video/x-matroska", new string[] { ".mkv" }));
            mimeTypes.Add(new MimeTypeInfo("video/x-ms-asf", new string[] { ".asf", ".asx" }));
            mimeTypes.Add(new MimeTypeInfo("video/x-ms-wm", new string[] { ".wm" }));
            mimeTypes.Add(new MimeTypeInfo("video/x-ms-wmv", new string[] { ".wmv" }));
            mimeTypes.Add(new MimeTypeInfo("video/x-ms-wmx", new string[] { ".wmx" }));
            mimeTypes.Add(new MimeTypeInfo("video/x-ms-wvx", new string[] { ".wvx" }));
            mimeTypes.Add(new MimeTypeInfo("video/x-msvideo", new string[] { ".avi" }));
            mimeTypes.Add(new MimeTypeInfo("video/x-sgi-movie", new string[] { ".movie" }));
            mimeTypes.Add(new MimeTypeInfo("x-conference/x-cooltalk", new string[] { ".ice" }));

            return mimeTypes;
        }

        public MimeTypeInfo? GetByMimeType(string mimeType)
        {
            return GetAll().FirstOrDefault(mt => mt.MimeType.Equals(mimeType, StringComparison.OrdinalIgnoreCase));
        }

        public List<MimeTypeInfo> GetByFileExtension(string fileExtension)
        {
            return GetAll().Where(mt => mt.FileExtensions.Contains(fileExtension.ToLower())).ToList();
        }
    }    
}
